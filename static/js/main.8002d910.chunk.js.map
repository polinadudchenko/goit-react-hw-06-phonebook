{"version":3,"sources":["components/Contact/Contact.module.css","App.module.css","components/Filter/Filter.module.css","components/Section/Section.module.css","redux/contacts/actions.js","redux/contacts/reducer.js","redux/store.js","components/ContactForm/ContactForm.js","components/Contact/Contact.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/Section/Section.js","App.js","index.js","components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.module.css"],"names":["module","exports","addContact","createAction","name","number","payload","id","uuidv1","deleteContact","filterContacts","contacts","createReducer","state","filter","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","contactsReducer","devTools","process","persistor","persistStore","connect","dispatch","onSubmit","useState","setName","setNumber","handleChange","e","target","value","Error","reset","className","s","contact_form","preventDefault","find","contact","toLowerCase","toast","info","contact_form__label","type","contact_form__input","onChange","pattern","title","required","contact_form__button","Contact","deleteBtn","contact_line","contact_btn","onClick","getVisibleContacts","normalizedFilter","trim","includes","onDeleteContact","length","contact__info","contact_list","contact_list__head","contact_list__head_line","contact_list__head_column","contact_list__body","map","contact_list__body_line","onHandleFilter","currentTarget","filter_form__label","filter_form__input","Section","children","section","section_title","defaultPropTypes","App","App_title","App_content","autoClose","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.8002d910.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact_line\":\"Contact_contact_line__197vi\",\"contact_btn\":\"Contact_contact_btn__TNJGF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__wBJR4\",\"App_title\":\"App_App_title__IySlC\",\"App_content\":\"App_App_content__3gufr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter_form__label\":\"Filter_filter_form__label__Pd43R\",\"filter_form__input\":\"Filter_filter_form__input__1QTn0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__1kNW9\",\"section_title\":\"Section_section_title__kIEYS\"};","import { createAction } from '@reduxjs/toolkit';\r\nimport { v1 as uuidv1 } from 'uuid';\r\n\r\nexport const addContact = createAction('contacts/add', (name, number) => ({\r\n    payload: {\r\n        id: uuidv1(),\r\n        name,\r\n        number\r\n    }\r\n}));\r\n\r\nexport const deleteContact = createAction('contacts/delete');\r\nexport const filterContacts = createAction('contacts/filter');","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport { addContact, deleteContact, filterContacts} from './actions'\r\n\r\nconst contacts = createReducer([], {\r\n  [addContact]: (state, { payload }) => {\r\n            return [...state, payload]\r\n  },\r\n  [deleteContact]: (state, { payload }) => state.filter(({id}) => id !== payload)\r\n})\r\n\r\nconst filter = createReducer('', {\r\n  [filterContacts]: (_, { payload }) => payload\r\n})\r\n\r\nexport default combineReducers({\r\n  contacts,\r\n  filter,\r\n});","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport contactsReducer from './contacts/reducer'\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n];\r\n\r\nconst contactsPersistConfig = {\r\n  key: 'contacts',\r\n  storage,\r\n  blacklist: ['filter'],\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: persistReducer(contactsPersistConfig, contactsReducer),\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport { store, persistor };","import { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addContact } from '../../redux/contacts/actions'\r\nimport { toast } from 'react-toastify';\r\nimport PropTypes from 'prop-types'\r\nimport s from './ContactForm.module.css'\r\n\r\nfunction ContactForm({contacts, onSubmit}){\r\n    const [name, setName] = useState('');\r\n    const [number, setNumber] = useState('');\r\n    \r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        switch (name) {\r\n            case ('name'):\r\n                setName(value);\r\n                break;\r\n            case ('number'):\r\n                setNumber(value);\r\n                break;\r\n            default:\r\n                throw new Error();\r\n        }\r\n    }\r\n  \r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (contacts.find(contact => (contact.name.toLowerCase() === name.toLowerCase()) || (contact.number.toLowerCase() === number.toLowerCase()))) {\r\n            return toast.info('This contact already in the addressbook')\r\n        }\r\n        onSubmit(name, number);\r\n        reset();\r\n    }\r\n    \r\n    const reset = () => {\r\n        setName('');\r\n        setNumber('');\r\n    }\r\n\r\n    \r\n    return (<form className={s.contact_form} onSubmit={handleSubmit}>\r\n            <label className={s.contact_form__label}> Name\r\n                <input\r\n                    type=\"text\"                \r\n                    className={s.contact_form__input}\r\n                    name=\"name\"\r\n                    value={name}\r\n                    onChange={handleChange}\r\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                    title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                    required\r\n                />\r\n            </label>\r\n            <label className={s.contact_form__label}> Telephone number\r\n                <input\r\n                    type=\"tel\"\r\n                    name=\"number\"\r\n                    value={number}\r\n                    className={s.contact_form__input}\r\n                    onChange={handleChange}\r\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                    title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                    required\r\n                />\r\n            </label>\r\n            <button type=\"submit\" className={s.contact_form__button} >\r\n            Add to contacts\r\n            </button>\r\n        </form> )\r\n}\r\n\r\nContactForm.propTypes = {\r\n        onSubmit: PropTypes.func.isRequired,\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    contacts: state.contacts\r\n});\r\n\r\nconst mapDispatchtoProps = dispatch => ({\r\n    onSubmit: (name, number) => {\r\n        dispatch(addContact(name, number))\r\n    },\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchtoProps)(ContactForm)","import PropTypes from 'prop-types'\r\nimport s from './Contact.module.css'\r\n\r\nexport default function Contact({deleteBtn, name, number}) {\r\n        return <>\r\n            <td className={s.contact_line}>{ name }</td>\r\n            <td className={s.contact_line}>{number}</td>\r\n            <td className={s.contact_line}><button className={s.contact_btn} onClick={ deleteBtn }>Delete</button></td>\r\n            </>                    \r\n}\r\n\r\nContact.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    number: PropTypes.string.isRequired,\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport s from './ContactList.module.css';\r\nimport { connect } from 'react-redux';\r\nimport { deleteContact } from '../../redux/contacts/actions';\r\nimport Contact from '../Contact';\r\n\r\nfunction ContactList({ contacts, onDeleteContact }) {\r\n \r\n    \r\n  return ((contacts.length === 0)\r\n    ? <p className={s.contact__info}>No matches found</p>\r\n    : <table className={s.contact_list} >\r\n    <thead className={s.contact_list__head}>\r\n      <tr className={s.contact_list__head_line}>\r\n        <th className={s.contact_list__head_column}>Name</th>\r\n        <th className={s.contact_list__head_column}>Number</th>\r\n        <th className={s.contact_list__head_column}>Edit</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody className={s.contact_list__body}>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <tr key={id} className={s.contact_list__body_line}>\r\n          <Contact name={name} number={number} deleteBtn={() => onDeleteContact(id)} />\r\n        </tr>)\r\n      )}\r\n    </tbody>\r\n  </table>)\r\n}\r\n\r\nContactList.propTypes = {\r\n        contacts: PropTypes.arrayOf(PropTypes.shape({\r\n            id: PropTypes.string.isRequired,\r\n            name: PropTypes.string.isRequired,\r\n            number: PropTypes.string.isRequired,\r\n        })),\r\n        onDeleteContact: PropTypes.func.isRequired,\r\n}\r\n    \r\nconst getVisibleContacts = (contacts, filter) => {\r\n  const normalizedFilter = filter.toLowerCase().trim();\r\n\r\n  return contacts.filter(({ name }) =>\r\n    name.toLowerCase().includes(normalizedFilter),\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ contacts, filter }) => ({\r\n  contacts: getVisibleContacts(contacts, filter),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onDeleteContact: id => dispatch(deleteContact(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);","import PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { filterContacts } from '../../redux/contacts/actions'\r\nimport s from './Filter.module.css'\r\n\r\nfunction Filter({ filter, onHandleFilter }) {\r\n    \r\n    return <label className={s.filter_form__label}> Find a contact\r\n                <input\r\n                    type=\"text\"                \r\n                    className={s.filter_form__input}\r\n                    name=\"filter\"\r\n                    value={filter}\r\n                    onChange={onHandleFilter}\r\n                />\r\n            </label>\r\n}\r\n\r\nFilter.propTypes = {\r\n       onHandleFilter: PropTypes.func.isRequired,\r\n}\r\n    \r\nconst mapStateToProps = state => ({\r\n    filter: state.filter\r\n})\r\n\r\nconst mapDispatchtoProps = dispatch => ({\r\n    onHandleFilter: e => dispatch(filterContacts(e.currentTarget.value))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchtoProps)(Filter)","import PropTypes from 'prop-types'\r\nimport s from './Section.module.css'\r\n\r\nexport default function Section({ title, children }) {\r\n    return <section className={s.section}>\r\n        <h2 className={s.section_title}> {title}</h2>\r\n        {children}\r\n        </section>\r\n}\r\n\r\nSection.defaultPropTypes = {\r\n    title: '',\r\n}\r\n\r\nSection.propTypes = {\r\n    title: PropTypes.string,\r\n    children: PropTypes.node.isRequired,\r\n}","import { connect } from 'react-redux';\nimport { ToastContainer} from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport s from './App.module.css';\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter'\nimport Section from './components/Section'\n\n\nfunction App({contacts}) {\n\n  return (\n      <div className={s.App}>\n        <h1 className={s.App_title}>Phonebook</h1>\n        <div className={s.App_content}>\n        <Section title=\"Create a new Contact\">\n        <ContactForm/>\n        </Section>\n       \n        <Section title=\"Your contacts\">\n          {contacts.length === 0 ?\n            <p>You don't have any contacts yet, please add one to the form on the left</p>\n            :\n            <>\n            <Filter/>\n            <ContactList /> \n            </>\n          }\n        </Section>\n        <ToastContainer autoClose={3000}/>\n        </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n  contacts: state.contacts\n});\n\nexport default connect(mapStateToProps)(App);\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport {store, persistor} from './redux/store';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact__info\":\"ContactList_contact__info__3Z7G0\",\"contact_list\":\"ContactList_contact_list__3155S\",\"contact_list__head\":\"ContactList_contact_list__head__1-3je\",\"contact_list__body\":\"ContactList_contact_list__body__1JMHI\",\"contact_list__body_line\":\"ContactList_contact_list__body_line__VOcMa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact_form\":\"ContactForm_contact_form__1vUid\",\"contact_form__label\":\"ContactForm_contact_form__label__2xicU\",\"contact_form__input\":\"ContactForm_contact_form__input__PtHQF\",\"contact_form__button\":\"ContactForm_contact_form__button__ZdVbq\"};"],"sourceRoot":""}